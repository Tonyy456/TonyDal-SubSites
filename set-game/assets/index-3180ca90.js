var ce=Object.defineProperty;var le=(n,e,t)=>e in n?ce(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>(le(n,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();var l=(n=>(n.Diamond="Diamond",n.Squiggle="Squiggle",n.Oval="Oval",n))(l||{}),d=(n=>(n[n.Solid=0]="Solid",n[n.Stripped=1]="Stripped",n[n.Open=2]="Open",n))(d||{}),h=(n=>(n.Red="Red",n.Green="Green",n.Purple="Purple",n))(h||{});class m{constructor(e,t,r,s){a(this,"cardSymbolCount");a(this,"cardSymbol");a(this,"cardShading");a(this,"cardColor");if(e>3||e<1)throw new Error("Count must be in the range [1,3]");this.cardSymbolCount=e,this.cardSymbol=t,this.cardShading=r,this.cardColor=s}get count(){return this.cardSymbolCount}get symbol(){return this.cardSymbol}get shading(){return this.cardShading}get color(){return this.cardColor}Print(){function e(r){return r.substring(0,4).padStart(5," ")}var t=`Count = ${this.cardSymbolCount}
Symbol = ${e(l[this.cardSymbol])}
Shading = ${e(d[this.cardShading])}
Color = ${e(h[this.cardColor])}
`;console.log(t)}str(){function e(r){return r.substring(0,4).padStart(5," ")}var t=`${this.cardSymbolCount},${e(l[this.cardSymbol])},${e(d[this.cardShading])},${e(h[this.cardColor])}		`;return t}Copy(){return new m(this.count,this.cardSymbol,this.cardShading,this.cardColor)}}function C(n,e,t){const r=new Set([n.count,e.count,t.count]),s=new Set([n.symbol,e.symbol,t.symbol]),i=new Set([n.shading,e.shading,t.shading]),o=new Set([n.color,e.color,t.color]);return(r.size===1||r.size===3)&&(s.size===1||s.size===3)&&(i.size===1||i.size===3)&&(o.size===1||o.size===3)}var x=2;function de(n){x=n}var he=["AISelectSet","WaitingForAction","GameOver","NoSetButton","PlayerSelectedState","AISelectSet"];class B{constructor(e){a(this,"machine");this.machine=e}enter(){}exit(){}}class D extends B{constructor(t){super(t);a(this,"name","WaitingForAction");a(this,"playersWaiting",new Set)}message(t){switch(t){case"player set":this.machine.transition(new me(this.machine));break;case"ai set":this.machine.transition(new Q(this.machine));break;default:const r=Number(t);if(isNaN(r)||r>=x)break;this.playersWaiting.add(r),this.playersWaiting.size>=x&&this.machine.transition(new ue(this.machine));break}}}class ue extends B{constructor(t){super(t);a(this,"name","NoSetButton")}message(t){t=="initialized"&&this.machine.transition(new D(this.machine))}}class me extends B{constructor(){super(...arguments);a(this,"name","PlayerSelectedState")}message(t){switch(t){case"complete":this.machine.transition(new D(this.machine));break}}}class Q extends B{constructor(){super(...arguments);a(this,"name","AISelectSet")}message(t){switch(t){case"complete":this.machine.transition(new D(this.machine));break}}}class K{constructor(){a(this,"currentState");a(this,"exitListeners",new Map);a(this,"enterListeners",new Map)}addExitListener(e,t){const r=this.exitListeners.get(e);if(r==null)throw new Error("Unknown exit to listen to: "+e);r.push(t)}addEnterListener(e,t){const r=this.enterListeners.get(e);if(r==null)throw new Error("Unknown exit to listen to: "+e);r.push(t)}initializeStateNames(e){for(let t=0;t<e.length;t++){const r=e[t];this.exitListeners.set(r,[]),this.enterListeners.set(r,[])}}initialize(e){this.currentState=new e(this),this.currentState.enter()}transition(e){if(this.currentState==null)throw new Error("State Machine Undefined");this.currentState.exit(),this.triggerExit(this.currentState.name),this.currentState=e,this.currentState.enter(),this.triggerEnter(this.currentState.name),this.currentState.message("initialized")}processInput(e){if(this.currentState==null)throw new Error("State Machine Undefined");this.currentState.message(e)}triggerEnter(e){const t=this.enterListeners.get(e);if(t==null)throw new Error("event system isnt recognizing a string");for(let r=0;r<(t==null?void 0:t.length);r++)t[r]()}triggerExit(e){const t=this.exitListeners.get(e);if(t==null)throw new Error("event system isnt recognizing a string");for(let r=0;r<(t==null?void 0:t.length);r++)t[r]()}}function fe(){const n=new m(1,l.Diamond,d.Solid,h.Red),e=new m(2,l.Diamond,d.Solid,h.Red),t=new m(2,l.Diamond,d.Solid,h.Red);return C(n,e,t)===!1}function ge(){const n=new m(1,l.Diamond,d.Solid,h.Red),e=new m(2,l.Diamond,d.Solid,h.Red),t=new m(3,l.Diamond,d.Solid,h.Red);return C(n,e,t)===!0}function pe(){const n=new m(1,l.Diamond,d.Solid,h.Red),e=new m(2,l.Squiggle,d.Solid,h.Green),t=new m(3,l.Oval,d.Solid,h.Purple);return C(n,e,t)===!0}const T=new K;T.initialize(Q);T.initializeStateNames(["foo","bar"]);function Se(){try{return T.addEnterListener("foo",()=>{}),!0}catch{return!1}}function ye(){try{return T.addEnterListener("foo2",()=>{}),!1}catch{return!0}}function ve(){try{return T.addExitListener("foo",()=>{}),!0}catch{return!1}}function Ee(){try{return T.addExitListener("foo2",()=>{}),!1}catch{return!0}}const V=Object.freeze(Object.defineProperty({__proto__:null,addEnterListenerFails:ye,addEnterListenerWorks:Se,addExitListenerFails:Ee,addExitListenerWorks:ve,case1:fe,case2:ge,case3:pe},Symbol.toStringTag,{value:"Module"}));function be(n){console.warn(`unit tests, ${n} failed.`)}function we(){const n=V;try{for(const e in V){const t=n[e];t()||be(e)}}catch(e){throw console.log(e),new Error("Error running unit test case")}}class Ce{constructor(){a(this,"cards",[])}Initialize(){this.cards=[];const e=[l.Diamond,l.Oval,l.Squiggle],t=[d.Open,d.Solid,d.Stripped],r=[h.Green,h.Purple,h.Red],s=[1,2,3];e.forEach(i=>{t.forEach(o=>{r.forEach(u=>{s.forEach(g=>{this.cards.push(new m(g,i,o,u))})})})})}Shuffle(){const e=this.cards.length,t=.5*e*Math.log10(e);for(let r=0;r<t;r++){const s=Math.round(Math.random()*(e-1)),i=Math.round(Math.random()*(e-1)),o=this.cards[s];this.cards[s]=this.cards[i],this.cards[i]=o}}Draw(){return this.cards.pop()}Size(){return this.cards.length}str(){var e="",t=0;return this.cards.forEach(r=>{e=e+`${String(t).padStart(3," ")}: ${r.str()}
`,t+=1}),e}}function O(n){const e=n.cards.filter(t=>t!=null);for(let t=e.length-1;t>=2;t--){const r=e[t];for(let s=t-1;s>=1;s--){const i=e[s];for(let o=s-1;o>=0;o--){const u=e[o];if(C(r,i,u))return[r,i,u]}}}return null}function Te(n){const e=O(n);e!=null&&(e.forEach(t=>{const r=document.getElementById(`card-${n.cards.indexOf(t)}`);r&&r.classList.add("highlighted")}),setTimeout(()=>{e.forEach(t=>{const r=document.getElementById(`card-${n.cards.indexOf(t)}`);r&&r.classList.remove("highlighted")})},1500))}function Ie(n){const e=document.createElement("button");return e.id="hint-button",e.textContent="Hint",e.addEventListener("click",()=>{Te(n)}),e}const S=[],J=[];function Le(){const n=document.createElement("div");n.id="score-container";for(let e=0;e<x;e++){S.push(0);const t=document.createElement("div"),r=document.createElement("span"),s=document.createElement("span");J.push(s),t.append(r),t.append(s),n.append(t),r.innerHTML=`Player ${e+1}: `,r.style.marginRight="15px",s.id=`player-score-${e}`,s.innerHTML="0"}return n}function _(n){for(let e=0;e<n.length&&e<S.length;e++)S[e]=S[e]+n[e],J[e].innerHTML=`${S[e]}`}function ke(){var n="";for(let e=0;e<S.length;e++)n+=S[e],e+1<S.length&&(n+=":");return n}const $=new K;$.initializeStateNames(he);$.initialize(D);function v(n){$.processInput(n)}function X(n,e){$.addExitListener(n,e)}function L(n,e){$.addEnterListener(n,e)}class Y{constructor(e,t,r){a(this,"currentPlayer",0);a(this,"selectedCards",[]);a(this,"boundHandleCardClick");this.table=e,this.deck=t,this.keydownListener=r,this.boundHandleCardClick=this.handleCardClick.bind(this),this.initialize()}initialize(){}checkSelectedCards(){if(this.selectedCards.length===3){const[t,r,s]=this.selectedCards;var e=[0,0,0];C(t,r,s)?(e[this.currentPlayer]=1,this.table.RemoveCards(this.selectedCards,this.deck)):e[this.currentPlayer]=-1,v("complete"),_(e),M(),this.stopSelector()}}startSelector(e){this.currentPlayer=e,this.boundHandleCardClick=this.handleCardClick.bind(this),document.removeEventListener("keydown",this.keydownListener),document.querySelectorAll(".set-card").forEach(r=>{r.addEventListener("click",this.boundHandleCardClick)})}stopSelector(){this.selectedCards=[],document.addEventListener("keydown",this.keydownListener),document.querySelectorAll(".set-card").forEach(t=>{t.removeEventListener("click",this.boundHandleCardClick)})}handleCardClick(e){const t=e.currentTarget,r=t.id,s=parseInt(r.split("-")[1]),i=this.table.cards[s];this.selectedCards.length>=3||(this.selectedCards.includes(i)||(t.classList.add("select"),this.selectedCards.push(i)),this.selectedCards.length===3&&(this.clearHighlights(),this.checkSelectedCards()))}clearHighlights(){document.querySelectorAll(".select").forEach(t=>{t.classList.remove("select")})}}const U=4,F=2,Pe=`
<svg
    version="1.1"
    id="svg5"
    viewBox="0 0 200 200"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:svg="http://www.w3.org/2000/svg">
    <defs>
        <pattern id="stripes-red" width="${U}" height="10" patternUnits="userSpaceOnUse" patternTransform="rotate(45)">
            <line x1="0" y1="0" x2="0" y2="10" stroke="red" stroke-width="${F}" />
        </pattern>
        <pattern id="stripes-green" width="${U}" height="10" patternUnits="userSpaceOnUse" patternTransform="rotate(45)">
            <line x1="0" y1="0" x2="0" y2="10" stroke="green" stroke-width="${F}" />
        </pattern>
        <pattern id="stripes-purple" width="${U}" height="10" patternUnits="userSpaceOnUse" patternTransform="rotate(45)">
            <line x1="0" y1="0" x2="0" y2="10" stroke="purple" stroke-width="${F}" />
        </pattern>
        <g id="Oval">
            <circle
            style="stroke-width:0.15em;stop-color:#000000"
            id="path1104"
            cx="100"
            cy="100"
            r="20" />
        </g>
        <g id="Diamond" transform="translate(30,-75) scale(2 2)">
            <path
            style="stroke-width:0.15em;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1"
            d="m 33.266097,79.104129 c 0,0 -21.159579,8.869489 -21.159579,8.869489 0,0 21.148583,12.356222 21.148583,12.356222 0,0 22.219583,-10.690605 22.219583,-10.690605 0,0 -22.208587,-10.535106 -22.208587,-10.535106 z"
            id="path245"/>
        </g>
        <g id="Squiggle" transform="translate(0, -35)">
            <path
            style="stroke-width:0.15em;stroke-linecap:butt;stroke-linejoin:miter;stroke-dasharray:none;stroke-opacity:1"
            d="m 49.130998,149.1024 c -2.046477,-3.81355 -15.718529,-36.04049 5.628259,-29.37141 11.087866,3.46403 32.854736,11.92232 50.553463,13.28367 16.37554,1.25957 29.16029,-4.2112 29.36758,-9.68193 0.0733,-1.9338 7.04697,-8.70534 8.68277,-8.7966 7.99354,-0.44593 23.70709,23.49812 9.82593,25.66378 -6.10154,0.95193 -20.1688,8.62302 -37.18197,8.29156 -11.52782,-0.22459 -25.220987,-5.36382 -35.452238,-4.13759 -16.051012,1.92374 -27.100196,12.80541 -27.222968,12.57663 z"
            id="path245"
            sodipodi:nodetypes="ssssssssss" />
        </g>
    </defs>
    $USE_DIV_REPLACEMENT
</svg>
`;function xe(n){const e=document.createElement("div"),t=n.count,r=n.color,s=n.symbol,i=n.shading,o=[1,1,0],u=[`url(#stripes-${r.toLocaleLowerCase()})`,`${r}`,`${r}`];let g=`fill-opacity = "${o[i]}", fill="${u[i]}"`;var E="";for(let I=0;I<t;I++){const oe=(-t/2+I+.5)*50,ae=`<use href="#${s}" ${g} stroke="${r}" transform="translate(0, ${oe})"/>
`;E=E.concat(ae)}const G=Pe.replace("$USE_DIV_REPLACEMENT",E);return e.innerHTML=G,e}function Z(n){const e=document.createElement("div");e.className="table";const t=n.cards.length;let r=0;return n.cards.forEach((s,i)=>{const o=s!=null?xe(s):document.createElement("div");o.className="set-card",o.id=`card-${i}`;const g=Math.ceil(t/3),E=g%2===0?6:7,I=Math.ceil(E/2)-Math.ceil(g/2)+Math.floor(i/3)+1,b=document.createElement("div");b.classList.add("set-card-container"),e.classList.add(`table-${E}-col`),b.style.gridColumn=`${I}`,b.style.gridRow=`${r+1}`,b.append(o),e.append(b),r=(r+1)%3}),e}class $e{constructor(){a(this,"table",new Array(12).fill(null))}get cards(){return this.table}get length(){return this.table.length}get width(){return 3}get height(){return this.table.length/this.width}FillEmptySlots(e){this.table.length>12&&this.DecreaseTableSize();const t=this.EmptyCount();for(let r=0;r<t;r++){const s=e.Draw();if(s==null){this.DecreaseTableSize();return}this.AddCard(s)}}AddCard(e){const t=this.table.findIndex(r=>r==null);t!==-1&&(this.table[t]=e)}RemoveCards(e,t){e.forEach(r=>{const s=this.table.findIndex(i=>i==r);this.table[s]=null}),this.FillEmptySlots(t)}CardCount(){return this.table.filter(e=>e!==null).length}EmptyCount(){return this.table.filter(e=>e===null).length}IncreaseTableSize(e){if(!(this.height>=7)){this.table=this.table.concat([null,null,null]);for(let t=0;t<3;t++){const r=e.Draw();if(r==null){this.DecreaseTableSize();return}this.AddCard(r)}}}DecreaseTableSize(){this.table=this.table.filter(e=>e!==null)}Print(){var e="";this.table.forEach((t,r)=>{e+=t==null?void 0:t.str(),(r-2)%3==0&&(e+=`
`)})}}const ee=n=>{const e={l:()=>{c.IncreaseTableSize(f),M()}," ":()=>N(0),Enter:()=>N(1),q:()=>H(0),m:()=>W(),p:()=>H(1)};e[n.key]&&e[n.key]()},j=n=>{const e={l:()=>{c.IncreaseTableSize(f),M()}," ":()=>N(0),Enter:()=>N(0),m:()=>W(),q:()=>H(0)};e[n.key]&&e[n.key]()},p=class p{constructor(e){a(this,"playerIndex");a(this,"ISelectedTheSet",!1);this.playerIndex=e,L("AISelectSet",this.onAISelectSet.bind(this)),X("NoSetButton",this.onAISelectSet.bind(this)),L("WaitingForAction",this.startThinking.bind(this)),L("PlayerSelectedState",this.onPlayerSelectSet.bind(this))}onPlayerSelectSet(){p.CurrentTimeOutfunctions.forEach(e=>{clearTimeout(e)}),p.CurrentTimeOutfunctions=[]}onAISelectSet(){if(p.CurrentTimeOutfunctions.forEach(r=>{clearTimeout(r)}),p.CurrentTimeOutfunctions=[],!this.ISelectedTheSet)return;this.ISelectedTheSet=!1;const e=[.49,.25,.03];Math.random()>e[w]?this.SelectAndTriggerCorrect():this.SelectAndTriggerRandom()}highlightCards(e){e.forEach(t=>{const r=document.getElementById(`card-${c.cards.indexOf(t)}`);r&&r.classList.add("highlighted")})}unhighlightCards(e){e.forEach(t=>{const r=document.getElementById(`card-${c.cards.indexOf(t)}`);r&&r.classList.remove("highlighted")})}GetRandomCards(){const e=c.cards.filter(t=>t!=null);if(e.length<3)throw new Error("Not enough cards on the table to get cards");return[e[0],e[1],e[2]]}SelectAndTriggerCorrect(){var e=O(c);e==null&&(e=this.GetRandomCards()),this.highlightCards(e),setTimeout(()=>{if(e!=null){this.unhighlightCards(e);var t=[0,0,0];C(e[0],e[1],e[2])?(t[this.playerIndex]=1,c.RemoveCards(e,f)):t[this.playerIndex]=-1,_(t),M()}v("complete")},6e3)}SelectAndTriggerRandom(){const e=this.GetRandomCards();this.highlightCards(e);const t=setTimeout(()=>{var r=[0,0,0];r[this.playerIndex]=-1,_(r),this.unhighlightCards(e),v("complete")},4e3);p.CurrentTimeOutfunctions.push(t)}startThinking(){const e=[30,25,10];var r=([60,45,30][w]-e[w])*Math.random()+e[w];r*=1e3;var i=[.5,.15,.05][w]/(c.height-3)>Math.random();if(c.height==7&&(i=!0),O(c)!=null&&i){console.log(r);const u=setTimeout(()=>{this.ISelectedTheSet=!0,v("ai set")},r);p.CurrentTimeOutfunctions.push(u)}else H(this.playerIndex)}};a(p,"CurrentTimeOutfunctions",[]);let z=p;function Me(n,e,t){const r=document.createElement("div");r.id="timer",e.insertBefore(r,e.firstChild);const s=o=>{var u;if(r.innerHTML=`Player Time left: <span>${o}</span> seconds`,o<=0){clearInterval(i),t();const g=document.getElementById("timer");g!=null&&e.removeChild(g),(u=r.parentNode)==null||u.removeChild(r)}};s(n);const i=window.setInterval(()=>{n-=1,s(n)},1e3);return()=>{var o;clearInterval(i),(o=r.parentNode)==null||o.removeChild(r)}}var te=(n=>(n[n.PvP=0]="PvP",n[n.PvAI=1]="PvAI",n[n.PvAIvAI=2]="PvAIvAI",n))(te||{}),ne=(n=>(n[n.Easy=0]="Easy",n[n.Medium=1]="Medium",n[n.Hard=2]="Hard",n))(ne||{}),re=0,q=new Array,c=new $e,f=new Ce,A=1,w=1,se=0,k=null;try{X("PlayerSelectedState",()=>{k&&k()})}catch(n){console.log(n)}function N(n){se=n,k&&k(),k=Me(10,y,()=>{R.stopSelector(),R.clearHighlights();const e=new Array(x).fill(0);e[n]=-1,_(e),v("complete")}),v("player set")}function H(n){v(""+n)}L("NoSetButton",()=>{c.IncreaseTableSize(f),M()});var R=new Y(c,f,ee);L("PlayerSelectedState",()=>R.startSelector(se));const y=document.createElement("div");document.body.appendChild(y);y.id="app";y.className="app";var P;function Ae(){Oe(y)}function Oe(n){n.innerHTML=`
        <h1> Set Game: Main Menu </h1>
        <div id="main-menu"> 
            <select name="modes" class="main-menu-select" id="modes">
                <option value="PvP">PvP</option>
                <option value="PvAI" selected>PvAI</option>
                <option value="PvAIvAI">PvAIvAI</option>
            </select>
            <select name="difficulty" id="difficulty" class="main-menu-select">
                <option value="Easy">Easy</option>
                <option value="Medium" selected>Medium</option>
                <option value="Hard">Hard</option>
            </select>
            <button id='start-button'>Start Game</button>
        </div>
    `;const e=document.getElementById("modes"),t=document.getElementById("difficulty"),r=document.getElementById("start-button");r!=null&&(r.onclick=function(){const s=String(e.value);A=te[s];const i=String(t.value);w=ne[i],_e(n)})}function ie(){const n=document.getElementById("time");if(n!=null){var e=new Date().getTime();const t=Math.round((e-re)/1e3);n.innerHTML=`
        Game Time ${t}s
        `}window.requestAnimationFrame(ie)}function _e(n){re=new Date().getTime(),ie(),n.innerHTML="",f.Initialize(),f.Shuffle(),c.FillEmptySlots(f),A!==0?(R=new Y(c,f,j),n.innerHTML=`
        <h1> Welcome to the game of Set! </h1>
        <p id='time'> 0s </p>
        <span> Spacebar/Enter = Select Set</span>
        <br>
        <span> Q = Think there is no set </span>
        <br>
        <span> M = End game </span>
        `,q.push(new z(1))):n.innerHTML=`
        <h1> Welcome to the game of Set! </h1>
        <p id='time'> 0s </p>
        <span> Spacebar = Select Set Player 1, Enter = Select Set Player 2</span>
        <br>
        <span> Q = No Set On Table Player 1, P = No Set On Table Player 2</span>
        <span> Q = Think there is no set </span>
        <br>
        <span> M = End game </span>
        `,A===2&&(de(3),q.push(new z(2))),P=Z(c),n.append(Le()),n.append(Ie(c)),n.append(P),A!==0?document.addEventListener("keydown",j):document.addEventListener("keydown",ee),q.forEach(e=>{e.startThinking()})}function W(){const e=ke().split(":").map(Number),t=e[0],r=e[1],s=e[2]||0;let i;t>r&&t>s?i="Player 1":r>t&&r>s?i="Player 2":s>t&&s>r?i="Player 3":i="None. It's a Tie!!!",y.innerHTML=`
  <h1> Game Over </h1>
  <h2> Winner: ${i} </h2>
  <span> Scoreboard: </span>
  <div> Player 1: ${t} </div>
  <div> Player 2: ${r} </div>
  <div> Player 3: ${s!==void 0?s:"None"} </div>
  <button class="main-menu-button" onclick="window.location.reload()">Go to Main Menu</button>
`}function M(){if(P==null)return;const n=Z(c);y.removeChild(P),y.appendChild(n),P=n,O(c)===null&&f.Size()===0&&W(),console.log(f.Size())}we();Ae();
